{"version":3,"sources":["components/jokes/JokeItem.module.css","components/jokes/JokeList.module.css","components/jokes/NoJokesFound.module.css","components/jokes/JokeItem.js","components/jokes/JokeList.js","components/jokes/NoJokesFound.js","pages/AllJokes.js"],"names":["module","exports","JokeItem","props","className","classes","item","text","author","to","id","JokeList","jokes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedJokes","sort","jokeA","jokeB","sorting","onClick","push","pathname","list","map","joke","NoJokesFound","nojokes","AllJokes","useHttp","getAllJokes","sendRequest","status","loadedJokes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,yB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,4B,mBCA1DD,EAAOC,QAAU,CAAC,QAAU,gC,wFCkBbC,EAhBE,SAACC,GAChB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,oCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,iBAAYN,EAAMO,IAA1C,iC,iBCkCSC,EA/BE,SAACR,GAChB,IAXiBS,EAAOC,EAWlBC,EAAUC,cACVC,EAAWC,cAEXC,EAAgD,QADnC,IAAIC,gBAAgBH,EAASI,QACVC,IAAI,QAEpCC,GAhBWV,EAgBYT,EAAMS,MAhBXC,EAgBkBK,EAfnCN,EAAMW,MAAK,SAACC,EAAOC,GACxB,OAAIZ,EACKW,EAAMd,GAAKe,EAAMf,GAAK,GAAK,EAE3Bc,EAAMd,GAAKe,EAAMf,GAAK,GAAK,MAiBtC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAWC,IAAQqB,QAAxB,SACE,yBAAQC,QAPe,WAC3Bb,EAAQc,KAAR,UAAgBZ,EAASa,SAAzB,iBAA2CX,EAAoB,OAAS,SAMpE,kBAA6CA,EAAqB,aAAc,iBAElF,oBAAId,UAAWC,IAAQyB,KAAvB,SACGR,EAAYS,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEtB,GAAIsB,EAAKtB,GACTF,OAAQwB,EAAKxB,OACbD,KAAMyB,EAAKzB,MAHNyB,EAAKtB,a,yCCrBPuB,EAXM,WACnB,OACE,sBAAK7B,UAAWC,IAAQ6B,QAAxB,UACE,gDACA,cAAC,IAAD,CAAM9B,UAAU,MAAMK,GAAG,YAAzB,4BC6BS0B,UA5BE,WACf,MAKIC,YAAQC,KAAa,GAJvBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAMF,OAJAC,qBAAU,WACRL,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKnC,UAAU,WAAf,SACE,cAACwC,EAAA,EAAD,MAIFF,EACK,mBAAGtC,UAAU,mBAAb,SAAiCsC,IAE3B,cAAXH,GAA4BC,GAAsC,IAAvBA,EAAYK,OAIpD,cAAC,EAAD,CAAUjC,MAAO4B,IAHf,cAAC,EAAD","file":"static/js/5.e36929f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"JokeItem_item__3B9n8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"JokeList_list__3sVwQ\",\"sorting\":\"JokeList_sorting__1l1Hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nojokes\":\"NoJokesFound_nojokes__2nmrt\"};","import classes from './JokeItem.module.css';\nimport {Link} from 'react-router-dom';\n\nconst JokeItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockjoke>\n          <p>{props.text}</p>\n        </blockjoke>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/jokes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default JokeItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport JokeItem from \"./JokeItem\";\nimport classes from \"./JokeList.module.css\";\n\nconst sortJokes = (jokes, ascending) => {\n  return jokes.sort((jokeA, jokeB) => {\n    if (ascending) {\n      return jokeA.id > jokeB.id ? 1 : -1;\n    } else {\n      return jokeA.id < jokeB.id ? 1 : -1;\n    }\n  });\n};\n\nconst JokeList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams= new URLSearchParams(location.search);\n  const isSortingAscending= queryParams.get('sort') === 'asc';\n\n  const sortedJokes= sortJokes(props.jokes, isSortingAscending)\n\n  const changeSortingHandler = () => {\n    history.push(`${location.pathname}?sort=${(isSortingAscending? 'desc' : 'asc')}`);\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending': 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedJokes.map((joke) => (\n          <JokeItem\n            key={joke.id}\n            id={joke.id}\n            author={joke.author}\n            text={joke.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default JokeList;\n","import classes from './NoJokesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoJokesFound = () => {\n  return (\n    <div className={classes.nojokes}>\n      <p>No jokes found!</p>\n      <Link className='btn' to='/new-joke'>\n        Add a joke\n      </Link>\n    </div>\n  );\n};\n\nexport default NoJokesFound;\n","import { useEffect } from \"react\";\nimport JokeList from \"../components/jokes/JokeList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllJokes } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoJokesFound from '../components/jokes/NoJokesFound';\n\n\nconst AllJokes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedJokes,\n    error,\n  } = useHttp(getAllJokes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n  if (status === \"completed\" && (!loadedJokes || loadedJokes.length === 0)) {\n    return <NoJokesFound />;\n  }\n\n  return <JokeList jokes={loadedJokes} />;\n};\n\nexport default AllJokes;\n"],"sourceRoot":""}